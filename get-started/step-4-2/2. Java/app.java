package com.checkout.payments;

import com.checkout.CheckoutApiException;
import com.checkout.CheckoutApiImpl;
import com.checkout.CheckoutException;
import com.checkout.CheckoutSdk;
import com.checkout.Environment;
import com.checkout.common.Currency;
import com.checkout.payments.request.PaymentRequest;
import com.checkout.payments.request.source.RequestTokenSource;
import com.checkout.payments.response.PaymentResponse;

import java.util.concurrent.ExecutionException;

public class RequestPayment {

    public static void main(String[] args) {
        final CheckoutApiImpl api;

        try {
            api = CheckoutSdk.builder()
                    .staticKeys()
                    .secretKey((System.getenv("sk_sbox_XXX")))
                    .environment(Environment.SANDBOX)
                    .build();
        } catch (CheckoutException ex) {
            throw new RuntimeException(ex);
        }

        // The token generated by Frames on the client side
        final PaymentRequest request = PaymentRequest.builder()
                .source(RequestTokenSource.builder()
                        .token("tok_XXX")
                        .build())
                .currency(Currency.GBP)
                .amount(2499L)
                .processingChannelId("pc_XXX")
                .build();

        try {
            final PaymentResponse paymentResponse = api.paymentsClient().requestPayment(request).get();
            System.out.println("Success, here is your payment status = " + paymentResponse.getStatus());
        } catch (InterruptedException e) {
            throw new RuntimeException(e);
        } catch (ExecutionException e) {
            if (e.getCause() instanceof CheckoutApiException) {
                System.out.println("Error Details = " + ((CheckoutApiException) e.getCause()).getErrorDetails().getOrDefault("error_codes", null));
            }
            throw new RuntimeException(e);
        }
    }
}